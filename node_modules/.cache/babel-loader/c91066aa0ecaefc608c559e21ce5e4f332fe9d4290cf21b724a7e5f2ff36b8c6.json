{"ast":null,"code":"var _jsxFileName = \"C:\\\\V sem notes\\\\Projects\\\\CN\\\\q6cn\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TableRow from './TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  initialColleges\n}) => {\n  _s();\n  const [colleges, setColleges] = useState(initialColleges);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n\n  // Function to fetch more data\n  const fetchMoreData = () => {\n    // Fetch next page of data\n    const nextPage = page + 1;\n    // Assuming each page contains 6 colleges\n    const nextPageColleges = initialColleges.slice((nextPage - 1) * 6, nextPage * 6);\n    console.log('Next page colleges:', nextPageColleges); // Add logging here\n    if (nextPageColleges.length > 0) {\n      setColleges([...colleges, ...nextPageColleges]);\n      setPage(nextPage);\n    } else {\n      // No more data available\n      setHasMore(false);\n    }\n  };\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.innerHeight + window.scrollY >= document.body.scrollHeight && hasMore) {\n        fetchMoreData();\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [hasMore]); // Re-run effect when hasMore changes\n\n  console.log('Colleges:', colleges); // Add logging here\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"CD Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"College\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Fees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Average Package\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Highest Package\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"User Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: colleges.map(college => /*#__PURE__*/_jsxDEV(TableRow, {\n        college: college\n      }, college.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Table, \"YJ7UAyiQbBiEwV9XgZUhNtNBWVo=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useEffect","TableRow","jsxDEV","_jsxDEV","Table","initialColleges","_s","colleges","setColleges","page","setPage","hasMore","setHasMore","fetchMoreData","nextPage","nextPageColleges","slice","console","log","length","handleScroll","window","innerHeight","scrollY","document","body","scrollHeight","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","map","college","id","_c","$RefreshReg$"],"sources":["C:/V sem notes/Projects/CN/q6cn/src/components/Table.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TableRow from './TableRow';\r\n\r\nconst Table = ({ initialColleges }) => {\r\n  const [colleges, setColleges] = useState(initialColleges);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  // Function to fetch more data\r\n  const fetchMoreData = () => {\r\n    // Fetch next page of data\r\n    const nextPage = page + 1;\r\n    // Assuming each page contains 6 colleges\r\n    const nextPageColleges = initialColleges.slice((nextPage - 1) * 6, nextPage * 6);\r\n    console.log('Next page colleges:', nextPageColleges); // Add logging here\r\n    if (nextPageColleges.length > 0) {\r\n      setColleges([...colleges, ...nextPageColleges]);\r\n      setPage(nextPage);\r\n    } else {\r\n      // No more data available\r\n      setHasMore(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (window.innerHeight + window.scrollY >= document.body.scrollHeight && hasMore) {\r\n        fetchMoreData();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [hasMore]); // Re-run effect when hasMore changes\r\n\r\n  console.log('Colleges:', colleges); // Add logging here\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>CD Rank</th>\r\n          <th>College</th>\r\n          <th>Fees</th>\r\n          <th>Average Package</th>\r\n          <th>Highest Package</th>\r\n          <th>User Reviews</th>\r\n          <th>Rank</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {colleges.map(college => (\r\n          <TableRow key={college.id} college={college} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}